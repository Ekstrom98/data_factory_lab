{
	"name": "Bank ABC",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Customers",
						"type": "DatasetReference"
					},
					"name": "Customers"
				},
				{
					"dataset": {
						"referenceName": "Relationship_managers",
						"type": "DatasetReference"
					},
					"name": "RelationshipManagersRaw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestinationFile",
						"type": "DatasetReference"
					},
					"name": "Destination"
				}
			],
			"transformations": [
				{
					"name": "JoinCustRelMgrs"
				},
				{
					"name": "SELECTColumnsCust"
				},
				{
					"name": "SELECTColumnsRelMgrs"
				},
				{
					"name": "RelationshipManagers"
				},
				{
					"name": "SELECTColsRelMgrs"
				},
				{
					"name": "Final"
				},
				{
					"name": "AggregateDeposit"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customer_id as integer,",
				"          relationship_manager_id as integer,",
				"          last_updated as string,",
				"          deposit_amount as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> Customers",
				"source(output(",
				"          branch_id as integer,",
				"          relationship_manager_id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          last_updated as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> RelationshipManagersRaw",
				"AggregateDeposit, SELECTColsRelMgrs join(AggregateDeposit@Relationship_manager_id == SELECTColsRelMgrs@Relationship_manager_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinCustRelMgrs",
				"Customers select(mapColumn(",
				"          Customer_id = customer_id,",
				"          Relationship_manager_id = relationship_manager_id,",
				"          Deposit_amount = deposit_amount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTColumnsCust",
				"RelationshipManagersRaw select(mapColumn(",
				"          Branch_id = branch_id,",
				"          Relationship_manager_id = relationship_manager_id,",
				"          first_name,",
				"          last_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTColumnsRelMgrs",
				"SELECTColumnsRelMgrs derive(Relationship_manager_fullname = concat(first_name, \" \", last_name)) ~> RelationshipManagers",
				"RelationshipManagers select(mapColumn(",
				"          Branch_id,",
				"          Relationship_manager_id,",
				"          Relationship_manager_fullname",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTColsRelMgrs",
				"JoinCustRelMgrs derive(Last_updated = currentDate()) ~> Final",
				"SELECTColumnsCust aggregate(groupBy(Customer_id,",
				"          Relationship_manager_id),",
				"     Deposit_amount = sum(Deposit_amount)) ~> AggregateDeposit",
				"Final sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[''],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Customer_id,",
				"          Relationship_manager_id = AggregateDeposit@Relationship_manager_id,",
				"          Deposit_amount,",
				"          Branch_id,",
				"          Last_updated,",
				"          Relationship_manager_fullname",
				"     ),",
				"     partitionBy('hash', 1)) ~> Destination"
			]
		}
	}
}