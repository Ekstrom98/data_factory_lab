{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "factory-viktor"
		},
		"Datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Datalake'"
		},
		"API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.coindesk.com/v1/bpi/currentprice.json"
		},
		"Datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://viggstorageacc.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Datalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "API",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Customers",
						"fileSystem": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"customer_id": {
							"type": "integer"
						},
						"relationship_manager_id": {
							"type": "integer"
						},
						"last_updated": {
							"type": "string"
						},
						"deposit_amount": {
							"type": "number"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('Coinbase_', formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'))",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "bankABC.csv",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Relationship_managers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "relationship_manager.json",
						"folderPath": "Relationship_managers",
						"fileSystem": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"branch_id": {
							"type": "integer"
						},
						"relationship_manager_id": {
							"type": "integer"
						},
						"first_name": {
							"type": "string"
						},
						"last_name": {
							"type": "string"
						},
						"last_updated": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/migration-pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API_to_Datalake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "API",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Datalake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/API')]",
				"[concat(variables('factoryId'), '/datasets/Datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bank ABC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Customers",
								"type": "DatasetReference"
							},
							"name": "Customers"
						},
						{
							"dataset": {
								"referenceName": "Relationship_managers",
								"type": "DatasetReference"
							},
							"name": "RelationshipManagersRaw"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationFile",
								"type": "DatasetReference"
							},
							"name": "Destination"
						}
					],
					"transformations": [
						{
							"name": "JoinCustRelMgrs"
						},
						{
							"name": "SELECTColumnsCust"
						},
						{
							"name": "SELECTColumnsRelMgrs"
						},
						{
							"name": "RelationshipManagers"
						},
						{
							"name": "SELECTColsRelMgrs"
						},
						{
							"name": "Final"
						},
						{
							"name": "AggregateDeposit"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as integer,",
						"          relationship_manager_id as integer,",
						"          last_updated as string,",
						"          deposit_amount as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> Customers",
						"source(output(",
						"          branch_id as integer,",
						"          relationship_manager_id as integer,",
						"          first_name as string,",
						"          last_name as string,",
						"          last_updated as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> RelationshipManagersRaw",
						"AggregateDeposit, SELECTColsRelMgrs join(AggregateDeposit@Relationship_manager_id == SELECTColsRelMgrs@Relationship_manager_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinCustRelMgrs",
						"Customers select(mapColumn(",
						"          Customer_id = customer_id,",
						"          Relationship_manager_id = relationship_manager_id,",
						"          Deposit_amount = deposit_amount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SELECTColumnsCust",
						"RelationshipManagersRaw select(mapColumn(",
						"          Branch_id = branch_id,",
						"          Relationship_manager_id = relationship_manager_id,",
						"          first_name,",
						"          last_name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SELECTColumnsRelMgrs",
						"SELECTColumnsRelMgrs derive(Relationship_manager_fullname = concat(first_name, \" \", last_name)) ~> RelationshipManagers",
						"RelationshipManagers select(mapColumn(",
						"          Branch_id,",
						"          Relationship_manager_id,",
						"          Relationship_manager_fullname",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SELECTColsRelMgrs",
						"JoinCustRelMgrs derive(Last_updated = currentDate()) ~> Final",
						"SELECTColumnsCust aggregate(groupBy(Customer_id,",
						"          Relationship_manager_id),",
						"     Deposit_amount = sum(Deposit_amount)) ~> AggregateDeposit",
						"Final sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          Customer_id,",
						"          Relationship_manager_id = AggregateDeposit@Relationship_manager_id,",
						"          Deposit_amount,",
						"          Branch_id,",
						"          Last_updated,",
						"          Relationship_manager_fullname",
						"     )) ~> Destination"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Customers')]",
				"[concat(variables('factoryId'), '/datasets/Relationship_managers')]",
				"[concat(variables('factoryId'), '/datasets/DestinationFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_bank_abc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bank ABC",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bank ABC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Customers": {},
									"RelationshipManagersRaw": {},
									"Destination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Bank ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bi_hourly_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "migration-pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2022-10-17T11:34:00Z",
						"endTime": "2022-10-17T16:34:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/migration-pipeline')]"
			]
		}
	]
}